{"version":3,"file":"kavenegarApi.js","sourceRoot":"","sources":["../../src/kavenegarApi.ts"],"names":[],"mappings":"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","sourcesContent":["import axios, { AxiosInstance } from 'axios';\nimport IKavenegarApi, {\n    ACTION,\n    ArrayParams,\n    CancelParams,\n    ConfigParams,\n    CountInboxParams,\n    CountOutBoxParams,\n    LastOutBoxParams,\n    LookupParams,\n    METHOD,\n    ReceiveParams,\n    SelectOutBoxParams,\n    SelectParams,\n    SimpleParams,\n    StatusByLocalParams,\n    StatusParams,\n    TTSParams,\n} from './IkavenegarApi';\n\nexport default class KavenegarApi implements IKavenegarApi {\n    version: string;\n    apikey: string;\n    private axiosInstance: AxiosInstance;\n\n    constructor(apikey: string) {\n        this.apikey = apikey;\n        this.version = 'v1';\n        this.axiosInstance = axios.create({\n            baseURL: 'https://api.kavenegar.com/',\n            // timeout: 1000,\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' },\n        });\n    }\n\n    async request(action: ACTION, method: METHOD, params: Record<string, any>) {\n        const path = this.version + '/' + this.apikey + '/' + action + '/' + method + '.json';\n        const encodeParams = new URLSearchParams(params);\n        await this.axiosInstance\n            .post(path, encodeParams, { headers: { 'Content-Length': encodeParams.toString().length } })\n            .then((res) => {\n                console.log(`PUSH statusCode: ${res.status}`);\n                console.log('KavenegarApi axiosInstance: %j', res.data);\n            })\n            .catch((err) => {\n                console.error('KavenegarApi axiosInstance catch err: ', err);\n                throw err;\n            });\n    }\n\n    async send(data: SimpleParams) {\n        await this.request(ACTION.SMS, METHOD.SEND, data);\n    }\n    sendArray(data: ArrayParams) {\n        this.request(ACTION.SMS, METHOD.SEND_ARRAY, data);\n    }\n    status(data: StatusParams) {\n        this.request(ACTION.SMS, METHOD.STATUS, data);\n    }\n    statusLocalMessageId(data: StatusByLocalParams) {\n        this.request(ACTION.SMS, METHOD.STATUS_LOCAL_MESSAGE_ID, data);\n    }\n    select(data: SelectParams) {\n        this.request(ACTION.SMS, METHOD.SELECT, data);\n    }\n    selectOutbox(data: SelectOutBoxParams) {\n        this.request(ACTION.SMS, METHOD.SELECT_OUTBOX, data);\n    }\n    latestOutbox(data: LastOutBoxParams) {\n        this.request(ACTION.SMS, METHOD.LATEST_OUTBOX, data);\n    }\n    countOutbox(data: CountOutBoxParams) {\n        this.request(ACTION.SMS, METHOD.COUNT_OUTBOX, data);\n    }\n    cancel(data: CancelParams) {\n        this.request(ACTION.SMS, METHOD.CANCEL, data);\n    }\n    receive(data: ReceiveParams) {\n        this.request(ACTION.SMS, METHOD.RECEIVE, data);\n    }\n    countInbox(data: CountInboxParams) {\n        this.request(ACTION.SMS, METHOD.COUNT_INBOX, data);\n    }\n    countPostalCode(data: SimpleParams) {\n        this.request(ACTION.SMS, METHOD.COUNT_POSTALCODE, data);\n    }\n    sendByPostalCode(data: SimpleParams) {\n        this.request(ACTION.SMS, METHOD.SEND_BY_POSTALCODE, data);\n    }\n    verifyLookup(data: LookupParams) {\n        this.request(ACTION.VERIFY, METHOD.LOOKUP, data);\n    }\n    async accountInfo() {\n        const path = this.version + '/' + this.apikey + '/' + ACTION.ACCOUNT + '/' + METHOD.INFO + '.json';\n        return await this.axiosInstance\n            .get(path)\n            .then((res) => {\n                console.log(`PUSH statusCode: ${res.status}`);\n                console.log('KavenegarApi axiosInstance: %j', res.data);\n                return res.data;\n            })\n            .catch((err) => {\n                console.error('KavenegarApi axiosInstance catch err: ', err);\n                throw err;\n            });\n    }\n    accountConfig(data: ConfigParams) {\n        this.request(ACTION.ACCOUNT, METHOD.CONFIG, data);\n    }\n    callMakeTTS(data: TTSParams) {\n        this.request(ACTION.CALL, METHOD.MAKETTS, data);\n    }\n}\n"]}